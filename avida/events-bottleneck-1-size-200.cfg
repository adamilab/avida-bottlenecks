# basic syntax: "trigger  start:interval:stop  event..."
# (begin|#:all|once|#:end|#)
#
# trigger can be omitted and "update" is assumed
#
# If trigger is "i" or "immediate" timing must be skipped
# Example: i pause
#
# If trigger and timing are skipped, immediate trigger is assumed
# Example: pause
#
# start can be a value or "begin"
# interval can be a value, "once", or "all" (implies every update)
# stop can be a value or "end"
#
# Examples:
# trigger start event
#	once when trigger passes start
#	same as [start:once:end]
# trigger start:interval event
#	every time after start that interval has been passed (like cycle)
#	same as [start:interval:end]
# trigger start:interval:stop event
#	every time after start that interval has been passed until stop
#
# Examples:
# update  	begin:100:end	calc_consensus 200
#	from the beginning to the end of the run, every 100 updates ...
# generation  	 1000:all:20000	inject creature.parasite 0
#	from when generation crosses 1000 to when generation crosses 20000,
#	every update (when events are processed) ...

# TRIGGERS:
# update (or u)
# generation (or g)

u 0 InjectAll organism.heads.100	# Inject all the begining

# Print all of the standard data files...
u 100:100:end PrintAverageData
u 100:100:end PrintDominantData
u 100:100:end PrintStatsData
u 100:100:end PrintCountData
u 100:100:end PrintTasksData
u 100:100:end PrintTimeData
u 100:100:end PrintResourceData

# A few data files not printed by default
# u 50:50:end print_totals_data
# u 50:50:end print_tasks_exe_data
# And lets calculate the landscape info by default.
# u 100:100 calc_landscape

# Setup the population bottlenneck
u 500000 ApplyBottleneck 200

# Setup the exit time and full population data collection.
u 499999:500000:end SavePopulation filename=detail:save_historic=0
u 499999:500000:end SavePopulation filename=detail-historic:save_historic=1

u 1000000 exit				# exit